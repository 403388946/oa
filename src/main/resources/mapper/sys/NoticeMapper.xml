<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sys.mapper.NoticeMapper" >
    <resultMap id="BaseResultMap" type="com.sys.model.Notice" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="url" property="url" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="server_id" property="serverId" jdbcType="BIGINT" />
        <result column="server_name" property="serverName" jdbcType="VARCHAR" />
        <result column="receive_user_name" property="receiveUserName" jdbcType="VARCHAR" />
        <result column="notice_time" property="noticeTime" jdbcType="TIMESTAMP" />
        <result column="notice_state" property="noticeState" jdbcType="INTEGER" />
        <result column="view_type" property="viewType" jdbcType="INTEGER" />
        <result column="creator" property="creator" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
        id ,url ,content ,server_id ,server_name ,receive_user_name ,notice_time ,notice_state ,view_type ,creator ,create_time
    </sql>

    <insert id="insert" parameterType="com.sys.model.Notice" flushCache="true">
        INSERT INTO sys_notice (
            url
            ,content
            ,server_id
            ,server_name
            ,receive_user_name
            ,notice_time
            ,notice_state
            ,view_type
            ,creator
            ,create_time
            ) VALUE (
            #{url}
            ,#{content}
            ,#{serverId}
            ,#{serverName}
            ,#{receiveUserName}
            ,#{noticeTime}
            ,#{noticeState}
            ,#{viewType}
            ,#{creator}
            ,now()
        )
        <selectKey keyProperty="id" resultType="long" order="AFTER">
          SELECT @@IDENTITY AS id
        </selectKey>
    </insert>

    <insert id="inserts" parameterType="com.sys.model.Notice" flushCache="true">
        INSERT INTO sys_notice (
        url
        ,content
        ,server_id
        ,server_name
        ,receive_user_name
        ,notice_time
        ,notice_state
        ,view_type
        ,creator
        ,create_time
        ) VALUES
        <foreach collection="loginNames" item="loginName" separator=",">
            (#{url}
            ,#{content}
            ,#{serverId}
            ,#{serverName}
            ,#{loginName}
            ,#{noticeTime}
            ,#{noticeState}
            ,#{viewType}
            ,#{creator}
            ,now())
        </foreach>
    </insert>

    <update id="update" parameterType="com.sys.model.Notice" flushCache="true">
        update sys_notice
        <set >
            <if test="url != null" >
                url = #{url},
            </if>
            <if test="content != null" >
                content = #{content},
            </if>
            <if test="serverId != null" >
                server_id = #{serverId},
            </if>
            <if test="noticeState != null" >
                notice_state = #{noticeState},
            </if>
            <if test="viewType != null" >
                view_type = #{viewType},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete" flushCache="true">
        DELETE FROM sys_notice WHERE id = #{id}
    </delete>

    <select id="findOne" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_notice
        WHERE id = #{id}
    </select>

    <select id="findByReceiveId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_notice
        WHERE (receive_user_name = #{receiveUserName} OR receive_user_name = 'ALL')
    </select>

    <select id="findNotices" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_notice
        WHERE (receive_user_name = #{receiveUserName} OR receive_user_name = 'ALL')
        limit #{offset}, #{limit}
    </select>

    <select id="myNotices" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM sys_notice
        WHERE (receive_user_name = #{receiveUserName} OR receive_user_name = 'ALL')
        <if test="viewType != null" >
            AND view_type = #{viewType}
        </if>
        ORDER BY notice_time DESC
        <if test="limit != null" >
            limit #{limit}
        </if>

    </select>
</mapper>