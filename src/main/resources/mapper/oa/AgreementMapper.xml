<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oa.mapper.AgreementMapper" >
    <resultMap id="BaseResultMap" type="com.oa.model.Agreement" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="price_num" property="priceNum" jdbcType="VARCHAR" />
        <result column="salary" property="salary" jdbcType="DECIMAL" />
        <result column="create_time" property="createDate" jdbcType="TIMESTAMP" />
        <result column="creater" property="creater" jdbcType="BIGINT" />
        <result column="update_time" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="updater" property="updater" jdbcType="BIGINT" />
        <result column="is_del" property="isDel" jdbcType="INTEGER" />
        <result column="custom_id" property="customId" jdbcType="BIGINT" />
    </resultMap>

    <resultMap id="BaseResultMap1" type="com.oa.dto.AgreementDto" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="price_num" property="priceNum" jdbcType="VARCHAR" />
        <result column="salary" property="salary" jdbcType="DECIMAL" />
        <result column="create_time" property="createDate" jdbcType="TIMESTAMP" />
        <result column="creater" property="creater" jdbcType="BIGINT" />
        <result column="update_time" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="updater" property="updater" jdbcType="BIGINT" />
        <result column="is_del" property="isDel" jdbcType="INTEGER" />
        <result column="custom_id" property="customId" jdbcType="BIGINT" />
        <result column="customerName" property="customerName" jdbcType="VARCHAR" />
        <result column="customerCode" property="customerCode" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, price_num, salary, create_time, creater, update_time, updater,
        is_del, custom_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from oa_agreement
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from oa_agreement
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.oa.model.Agreement" >
        insert into oa_agreement (price_num, salary, create_time, creater,
        is_del, custom_id)
        values (#{priceNum,jdbcType=VARCHAR}, #{salary,jdbcType=DOUBLE},
        now(), #{creater,jdbcType=BIGINT}, 0, #{customId,jdbcType=BIGINT})
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.oa.model.Agreement" >
        update oa_agreement
        <set >
            update_time = now(),
            <if test="priceNum != null" >
                price_num = #{priceNum,jdbcType=VARCHAR},
            </if>
            <if test="salary != null" >
                salary = #{salary,jdbcType=DOUBLE},
            </if>
            <if test="updater != null" >
                updater = #{updater,jdbcType=BIGINT},
            </if>
            <if test="isDel != null" >
                is_del = #{isDel,jdbcType=INTEGER},
            </if>
            <if test="customId != null">
                custom_id = #{customId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.oa.model.Agreement" >
        update oa_agreement
        set price_num = #{priceNum,jdbcType=VARCHAR},
        salary = #{salary,jdbcType=DOUBLE},
        update_time = now(),
        updater = #{updater,jdbcType=BIGINT},
        is_del = #{isDel,jdbcType=INTEGER},
        custom_id = #{customId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--  根据条件查询报价单号表信息 -->
    <select id="findAgreementByPage" resultMap="BaseResultMap1" >
        SELECT t.id, t.price_num, t.salary, t.create_time, t.creater, t.update_time, t.updater,
        t.is_del, t.custom_id,t.customerName, t.customerCode
        FROM (
            select a.id, a.price_num, a.salary, a.create_time, a.creater, a.update_time, a.updater,
              a.is_del, a.custom_id,
            (select c.name from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerName,
            (select c.code from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerCode
            from oa_agreement a
            where is_del = 0
            <if test="paramMap.priceNum != null and paramMap.priceNum != ''" >
                and a.price_num like concat('%',replace(#{paramMap.priceNum,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
        )t
        <where> 1=1
            <if test="paramMap.customerName != null and paramMap.customerName != ''" >
                and  t.customerName  like concat('%',replace(#{paramMap.customerName,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
            <if test="paramMap.customerCode != null and paramMap.customerCode != ''" >
                and t.customerCode like concat('%',replace(#{paramMap.customerCode,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
        </where> limit #{offset}, #{limit}
    </select>

    <!--  根据条件查询报价单号表信息总数 -->
    <select id="findAgreementByPageCount" resultType="java.lang.Integer" >
        SELECT count(t.id) allTotal
        FROM (
        select a.id, a.price_num, a.salary, a.create_time, a.creater, a.update_time, a.updater,
        a.is_del, a.custom_id,
        (select c.name from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerName,
        (select c.code from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerCode
        from oa_agreement a
        where is_del = 0
        <if test="paramMap.priceNum != null and paramMap.priceNum != ''" >
            and a.price_num like concat('%',replace(#{paramMap.priceNum,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
        </if>
        )t
        <where> 1=1
            <if test="paramMap.customerName != null and paramMap.customerName != ''" >
                and  t.customerName  like concat('%',replace(#{paramMap.customerName,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
            <if test="paramMap.customerCode != null and paramMap.customerCode != ''" >
                and t.customerCode like concat('%',replace(#{paramMap.customerCode,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
        </where>
    </select>


    <select id="queryAgreementByMap" resultMap="BaseResultMap1" >
        SELECT t.id, t.price_num, t.salary, t.create_time, t.creater, t.update_time, t.updater,
        t.is_del, t.custom_id,t.customerName, t.customerCode
        FROM (
        select a.id, a.price_num, a.salary, a.create_time, a.creater, a.update_time, a.updater,
        a.is_del, a.custom_id,
        (select c.name from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerName,
        (select c.code from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerCode
        from oa_agreement a
        where is_del = 0
        <if test="paramMap.priceNum != null and paramMap.priceNum != ''" >
            and a.price_num like concat('%',replace(#{paramMap.priceNum,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
        </if>
        )t
        <where> 1=1
            <if test="paramMap.customerName != null and paramMap.customerName != ''" >
                and  t.customerName  like concat('%',replace(#{paramMap.customerName,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
            <if test="paramMap.customerCode != null and paramMap.customerCode != ''" >
                and t.customerCode like concat('%',replace(#{paramMap.customerCode,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
        </where>  limit #{offset}, #{limit}
    </select>

    <!--  根据条件查询报价单号表信息总数 -->
    <select id="queryAgreementByMapCount" resultType="java.lang.Integer" >
        SELECT count(1) alltotal
        FROM (
        select a.id, a.price_num, a.salary, a.create_time, a.creater, a.update_time, a.updater,
        a.is_del, a.custom_id,
        (select c.name from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerName,
        (select c.code from oa_custom c where a.custom_id = c.id and c.is_del = 0) as customerCode
        from oa_agreement a
        where is_del = 0
        <if test="paramMap.priceNum != null and paramMap.priceNum != ''" >
            and a.price_num like concat('%',replace(#{paramMap.priceNum,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
        </if>
        )t
        <where> 1=1
            <if test="paramMap.customerName != null and paramMap.customerName != ''" >
                and  t.customerName  like concat('%',replace(#{paramMap.customerName,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
            <if test="paramMap.customerCode != null and paramMap.customerCode != ''" >
                and t.customerCode like concat('%',replace(#{paramMap.customerCode,jdbcType=VARCHAR},'%','/%'),'%') escape '/'
            </if>
        </where>
    </select>
</mapper>