<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	   default-lazy-init="true">

	<!-- 数据源配置, 使用DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url_oa}"/>
		<property name="username" value="${jdbc.username_oa}"/>
		<property name="password" value="${jdbc.password_oa}"/>

		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${dbcp.maxActive_oa}"/>
		<property name="maxIdle" value="${dbcp.maxIdle_oa}"/>
		<property name="defaultAutoCommit" value="false"/>
		<!-- 连接Idle一个小时后超时 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000"/>
		<property name="minEvictableIdleTimeMillis" value="3600000"/>
	</bean>

	
	<bean id="sqlSessionFactory_oa" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<array>
				<value>classpath:mapper/*/*Mapper.xml</value>
			</array>
		</property>
	</bean>
	 	
    <bean id="mybatisConfigurer_oa" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_oa"/>
        <property name="basePackage" value="com.*.mapper" />
    </bean>
    
    <!-- 事务配置 -->
    <bean id="transactionManager_oa"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--  配置事务传播特性 -->
	<tx:advice id="userTxAdvice" transaction-manager="transactionManager_oa">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="edit*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="remove*" propagation="REQUIRED" read-only="false" isolation="READ_COMMITTED" rollback-for="java.lang.Exception" />
			<tx:method name="*" read-only="true" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<!--  配置参与事务的类 -->
	<aop:config expose-proxy="true" proxy-target-class="true">
		<aop:pointcut id="pc" expression="execution(* com.*.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
	</aop:config>


	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager_oa" />
</beans>  